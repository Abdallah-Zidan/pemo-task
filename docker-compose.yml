services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USERNAME} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5

  gateway:
    build:
      context: .
      dockerfile: apps/gateway/Dockerfile
    restart: unless-stopped
    ports:
      - '3009:3009'
    env_file:
      - .env
    environment:
      - TRANSACTIONS_GRPC_URL=transactions:3001
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      transactions:
        condition: service_started

  transactions:
    build:
      context: .
      dockerfile: apps/transactions/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - DB_HOST=postgres
      - REDIS_URL=redis://redis:6379
      - TRANSACTIONS_GRPC_URL=transactions:3001

    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
